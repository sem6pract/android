actmain.xml

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".MainActivity">

    <TextView
        android:id="@+id/textView"
        android:layout_width="181dp"
        android:layout_height="43dp"
        android:text="Username: "
        android:textSize="22dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <EditText
        android:id="@+id/username"
        android:layout_width="match_parent"
        android:layout_height="63dp"
        android:ems="10"
        android:hint="Enter your Name"
        android:inputType="text" />

    <TextView
        android:id="@+id/textView2"
        android:layout_width="match_parent"
        android:layout_height="41dp"
        android:text="Password"
        android:textSize="22dp" />

    <EditText
        android:id="@+id/password"
        android:layout_width="match_parent"
        android:layout_height="65dp"
        android:ems="10"
        android:inputType="text"
        android:hint="Enter your password" />

    <Button
        android:id="@+id/login"
        android:layout_width="match_parent"
        android:layout_height="62dp"
        android:textSize="22dp"
        android:text="Login" />

    <Button
        android:id="@+id/drop"
        android:layout_width="match_parent"
        android:layout_height="62dp"
        android:textSize="22dp"
        android:text="Drop" />

    <Button
        android:id="@+id/register"
        android:layout_width="match_parent"
        android:layout_height="62dp"
        android:textSize="22dp"
        android:text="Register" />

</LinearLayout>

---------------------------------------------------------------------------------------------------

AndroiidManifest.xml


<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.P12"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>

-------------------------------------------------------------------------------------------------------------

Mainact.java

package com.example.p12;
import android.annotation.SuppressLint;
import android.os.Bundle;
import android.content.Context;
import android.database.*;
import android.database.sqlite.*;
import android.os.Bundle;
import android.view.View;
import android.widget.*;
import androidx.activity.EdgeToEdge;
import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;
class MyDB extends SQLiteOpenHelper
{
    public MyDB(Context c)
    {
        super(c,"logindb",null,1);
    }
    @Override
    public void onCreate(SQLiteDatabase db) {
        String str="create table login(username text,password text)";
        db.execSQL(str);
    }
    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
    String dr="drop table if exists login";
    db.execSQL(dr);
    onCreate(db);
    }
}
public class MainActivity extends AppCompatActivity {
    MyDB mdb;
    EditText eusername,epassword;
    Button blogin,bdrop,bregister;
    SQLiteDatabase db;
    @SuppressLint("MissingInflatedId")
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        eusername=(EditText) findViewById((R.id.username));
        epassword=(EditText) findViewById((R.id.password));
        blogin=(Button)findViewById(R.id.login);
        bdrop=(Button)findViewById(R.id.drop);
        bregister=(Button)findViewById(R.id.register);
        mdb=new MyDB(this);
    }
    public void login_fun(View v)
    {
        String un=String.valueOf(eusername.getText());
        String pass=String.valueOf(epassword.getText());
        db=mdb.getReadableDatabase();
        String q="select * from login where username='"+un+"'and password='"+pass+"'";
        try {
            Cursor c=db.rawQuery(q,null);
            if(c.getCount()==0)
            {
                Toast.makeText(this, "Username or Password wrong or User doesn't exist", Toast.LENGTH_LONG).show();
            }
            else
            {
                while(c.moveToNext())
                {
                    String uname = c.getString(0);
                    String passw = c.getString(1);
                    Toast.makeText(this, "Username:" + uname + "\nPassword:"+passw, Toast.LENGTH_LONG).show();
                    if (un.contentEquals(uname) && pass.contentEquals(passw)) {
                        c.close();
                    }
                }
            }
        }
        catch (SQLException sqle)
        {
            sqle.printStackTrace();;
        }
    }
    public void register_fun(View v)
    {
        String un = String.valueOf(eusername.getText()).trim();
        String pass = String.valueOf(epassword.getText()).trim();

        if (un.isEmpty() || pass.isEmpty()) {
            runOnUiThread(() -> Toast.makeText(getApplicationContext(), "Username or Password cannot be empty", Toast.LENGTH_SHORT).show());
            return;
        }
        db = mdb.getWritableDatabase();
        String q = "INSERT INTO login (username, password) VALUES ('" + un + "', '" + pass + "');";

        try {
            db.execSQL(q);
            runOnUiThread(() -> Toast.makeText(getApplicationContext(), "User Registered", Toast.LENGTH_SHORT).show());
        } catch (SQLException e) {
            e.printStackTrace();
            runOnUiThread(() -> Toast.makeText(getApplicationContext(), "Registration Failed!", Toast.LENGTH_SHORT).show());
        }
    }
    public void drop_fun(View v)
    {
        db=mdb.getWritableDatabase();
        mdb.onUpgrade(db,1,2);
        Toast.makeText(getApplicationContext(),"All User Deleted",Toast.LENGTH_LONG).show();
    }
}




